# This is an autogenerated function, ported from the original legacy version.
# It /should work/ as is, but will not have all the benefits of the modern
# function API. You should see the function docs to learn how to add function
# signatures for type safety and to document this function using puppet-strings.
#
# https://puppet.com/docs/puppet/latest/custom_functions_ruby.html
#
# ---- original file header ----
require 'yaml'
require 'active_support'

# ---- original file header ----
#
# @summary
#       Deep merges two YAML files using Hash#deep_merge
#
#
Puppet::Functions.create_function(:'puppet::merge_yaml') do
  # @param args
  #   The original array of arguments. Port this to individually managed params
  #   to get the full benefit of the modern function API.
  #
  # @return [Data type]
  #   Describe what the function returns here
  #
  dispatch :default_impl do
    # Call the method named 'default_impl' when this is matched
    # Port this to match individual params for better type safety
    repeated_param 'Any', :args
  end


  def default_impl(*args)
    

    if args.length < 2
      raise Puppet::ParseError, ("merge_yaml(): wrong number of arguments (#{args.length}; must be at least 2)")
    end

    fileA = args[0]
    fileB = args[1]

    if File.file?(fileA)
      hashA = YAML.load_file(fileA)
    else
      hashA = { }
    end

    if File.file?(fileB)
      hashB = YAML.load_file(fileB)
    else
      hashB = { }
    end

    return hashA.deep_merge(hashB)
  
  end
end
